https://w.amazon.com/bin/view/Amazon_Technical_Academy/Self_Service_Courses/Course4/JavaProgrammingPostDuke/learning-materials/this-keyword

// #1
public class Loan{
	private double interest;
	private LoanType type;


	public Loan(double interest, LoanType type){

		this.interest = interest;  
		this.type = type;
	}
		


}

ANSWER: D


#2

public class Circle {

   private int radius;
   private Point center;
   
   public Circle(int radius) {
       // this.radius = radius;   // this constructor initialize Circle with Point to null; this is a problem if user uses this constructor and you want to have Pointer

	// Fixed 


   	this(radius, new Point(0,0));


   }

   public Circle(int radius, Point center) {
       this.radius = radius;
       this.center = center;
   }

   public int getDiameter() {
       return radius * 2;
   }
   
   public double getArea() {
       return Math.PI  * Math.pow(radius, 2);
   }
}

ANSWER: B, D



#3

public class PracticeThis {
     private String str;
   
     public PracticeThis() {
         this("ATA Rulez");
     }
   
     public PracticeThis(String str) {
         this.str = str;
     }
   
     public void practiceMyThisKnowledge() {
          String str = "Who says ATA Rulez?";
   
          System.out.println(str);
          System.out.println(this); // this keyword in this line references the method toString because as there is not other string referencing to this keyword , the toStrig() method takes place
     }
   
     @Override
     public String toString() {
         return "According to PracticeThis: " + str;
     }
}

ANSWER: B




#4

public class RatingScore {      
    private double rating;
    private int maxRating;
    private String description;

    public RatingScore(double rating, int maxRating) {          
        this(rating, maxRating, "");
     }

    public RatingScore(double rating, int maxRating, String ratingDescription) { 
         this.rating = rating;
         this.maxRating = maxRating;
         this.description = ratingDescription;
    }        

    public String getRatingDescription() {
        return description;
    }       

    public String getDisplayableRating() {
        return rating + " out of " maxRating;
    }
}


ANSWER: A,D



